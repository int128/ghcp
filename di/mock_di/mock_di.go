// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/int128/ghcp/di (interfaces: Container)

// Package mock_di is a generated GoMock package.
package mock_di

import (
	gomock "github.com/golang/mock/gomock"
	di "github.com/int128/ghcp/di"
	reflect "reflect"
)

// MockContainer is a mock of Container interface
type MockContainer struct {
	ctrl     *gomock.Controller
	recorder *MockContainerMockRecorder
}

// MockContainerMockRecorder is the mock recorder for MockContainer
type MockContainerMockRecorder struct {
	mock *MockContainer
}

// NewMockContainer creates a new mock instance
func NewMockContainer(ctrl *gomock.Controller) *MockContainer {
	mock := &MockContainer{ctrl: ctrl}
	mock.recorder = &MockContainerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockContainer) EXPECT() *MockContainerMockRecorder {
	return m.recorder
}

// Run mocks base method
func (m *MockContainer) Run(arg0 di.ExtraDependencies, arg1 interface{}) error {
	ret := m.ctrl.Call(m, "Run", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Run indicates an expected call of Run
func (mr *MockContainerMockRecorder) Run(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Run", reflect.TypeOf((*MockContainer)(nil).Run), arg0, arg1)
}
